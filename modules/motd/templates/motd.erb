<% if @lsbmajdistrelease >= '7' -%>
#!/bin/bash

cat <<EOD
<% end -%>

This device is for authorized users only.  All traffic on this device
is monitored and will be used as evidence for prosecutions.  By using
this machine you agree to abide by the Debian Machines Usage Policies
<URL:http://www.debian.org/devel/dmup>.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<%=
def wrap(s, width=78)
      s.gsub(/(.{1,#{width}})(\s+|\Z)/, "\\1\n")
end

def markup(l)
  l = l.gsub(/\[\[(.*?)\|(.*?)\]\]/, '\2')
  l = l.gsub(/\[\[(\*|-)?(.*?)\]\]/, '\2')
  return l
end

purp = ''
if scope.lookupvar('site::nodeinfo').has_key?('nameinfo')
  purp += wrap(scope.lookupvar('site::nodeinfo')['nameinfo']) + "\n\n"
end

ninfo = scope.lookupvar('site::nodeinfo')

purp += 'Welcome to ' + fqdn
if (scope.lookupvar('site::nodeinfo')['ldap'].has_key?('purpose'))
  p = scope.lookupvar('site::nodeinfo')['ldap']['purpose'].clone()
  extra = ''

  if p.delete('buildd')
    purp += ", the Debian "
    if scope.lookupvar('site::nodeinfo')['ldap'].has_key?('architecture')
      purp += scope.lookupvar('site::nodeinfo')['ldap']['architecture'][0]
    end
    purp += " build daemon"
  end

  if p.delete('porterbox')
    purp += ", the Debian "
    if scope.lookupvar('site::nodeinfo')['ldap'].has_key?('architecture')
      purp += scope.lookupvar('site::nodeinfo')['ldap']['architecture'][0]
    end
    purp += " porterbox"
    extra += "\n"
    if classes.include?("porterbox")
      extra += "See 'schroot -l' for a list of available chroots.  Start new sessions\n"
      extra += "with 'schroot --begin-session -c <chroot>', run commands in sessions using\n"
      extra += "'schroot --run-session -c <session> [-- command]', and tear down sessions\n"
      extra += "using 'schroot --end-session -c <session>'.  You can run a limited set of\n"
      extra += "privileged commands, for instance some of apt-get, using\n"
      extra += "'dd-schroot-cmd -c <session> <command>'.\n"
      extra += "Use 'schroot-list-sessions' to list your open sessions.\n"
    else
      extra += "See 'dchroot -l' or 'schroot -l' for a list of available chroots.\n"
      if scope.lookupvar('site::nodeinfo')['ldap'].has_key?('admin')
        extra += "Please contact #{ninfo['ldap']['admin'][0]} for install requests,\n"
        extra += "following the recommendations in <URL:http://dsa.debian.org/doc/install-req/>.\n"
      end
    end
  end

  if p.size() > 0
    purp += ", used for the following services:\n"
    scope.lookupvar('site::nodeinfo')['ldap']['purpose'].sort.each do |l|
      l = markup(l)
      purp += "\t" + l + "\n"
    end
  else
    purp += ".\n"
  end

  purp += extra
else
  purp += ".\n"
end

purp += "\n"

if (scope.lookupvar('site::nodeinfo')['ldap'].has_key?('physicalHost'))
  if ninfo['ldap']['physicalHost'][0] =~ /ganeti/
    phys_host = 'cluster'
  else
    phys_host = 'physical host'
  end
  purp += wrap("This virtual server runs on the #{phys_host} #{ninfo['ldap']['physicalHost'][0]}, " +
               "which is hosted at #{ninfo['hoster']['longname']}."
               )
elsif scope.lookupvar('site::nodeinfo')['hoster']['name']
  purp += wrap("This server is hosted at #{ninfo['hoster']['longname']}.")
end


vms = []
scope.lookupvar('site::allnodeinfo').keys.sort.each do |node|
  if scope.lookupvar('site::allnodeinfo')[node]['physicalHost'] and scope.lookupvar('site::allnodeinfo')[node]['physicalHost'].include?(fqdn)
    vms << node
  end
end
unless vms.empty?
  purp += "\nThe following virtual machines run on this system:\n"
  vms.each do |node|
    purp += "\t- #{node}"
    if scope.lookupvar('site::allnodeinfo')[node]['purpose']
      purp += ":\n"
      scope.lookupvar('site::allnodeinfo')[node]['purpose'].sort.each do |l|
        l = markup(l)
        purp += "\t    " + l + "\n"
      end
    else
      purp += "\n"
    end
  end
end


if scope.lookupvar('::cluster').to_s != 'undefined'
  purp += "\nThis server is a node in ganeti cluster: "
  purp += scope.lookupvar('::cluster').to_s + ".\n"
  nodes = scope.lookupvar('::cluster_nodes').to_s.split.sort
  nodes.each do |node|
    purp += "\t" + node + "\n"
  end
  nodes.reject{|node| node.eql?(fqdn)}.each do |node|
    purp += "\t" + node + "\n"
    scope.lookupvar('site::allnodeinfo')[node]['ipHostNumber'].each do |ip|
      purp += "\t\t" + ip + "\n"
    end
  end
end


if scope.lookupvar('site::nodeinfo').has_key?('footer')
  purp += "\n" + wrap(scope.lookupvar('site::nodeinfo')['footer']) + "\n"
end

purp
-%>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

<% if @lsbmajdistrelease >= '7' -%>
EOD
<% end -%>
<%
# vim:set et:
# vim:set sts=2 ts=2:
# vim:set shiftwidth=2:
-%>
